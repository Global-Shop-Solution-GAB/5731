Program.Sub.Preflight.Start
'Author: Alejandro Anazco V.
'2/12/2020
'Programmed for ARC-TRONICS
'Purpose:Send Emails for notifications 

v.Global.sFormatPath.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.Control.Try
	'Check Custom Table.
	f.Intrinsic.Control.CallSub(checkCustomFolder)
	'Get Table data
	f.Intrinsic.Control.CallSub(getVendorCert)
	'Get only the expired certificaitons
	f.Intrinsic.Control.CallSub(getExpiredCerts)
	'Send emails.
	f.Intrinsic.Control.CallSub(sendEmails)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Closes ODBC connection, default to connection : "con"
f.Intrinsic.Control.If(v.ODBC!con.State, =, 1)
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.EndIf

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_5731_CertExpirationNotice.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.checkCustomFolder.Start
v.Local.sFolder.Declare
v.Local.bExists.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_5731\", v.Caller.GlobalDir, v.Local.sFolder)
	f.Intrinsic.File.DirExists(v.Local.sFolder, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.File.CreateDir(v.Local.sFolder)
	f.Intrinsic.Control.EndIf
	
	'Get File Path for Email Body, 
	f.Intrinsic.String.Build("{0}GCG_5731_EmailBody.txt", v.Local.sFolder, v.Global.sFormatPath)
	'If it doesn't exit stop program.
	f.Intrinsic.File.Exists(v.Global.sFormatPath, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.Control.End
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.checkCustomFolder.End

Program.Sub.getVendorCert.Start
f.Intrinsic.Control.Try
	'Get only Valid Certs
	f.ODBC.Connection!con.OpenCompanyConnection
	 	f.Data.DataTable.CreateFromSQL("vendorCertDT", "con", "Select * from GCG_5731_VENDOR_CERT where Valid  = '1'", True)
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.getVendorCert.End

Program.Sub.getExpiredCerts.Start
v.Local.dTemp.Declare
v.Local.sFilter.Declare
f.Intrinsic.Control.Try
	'Get current date + one month
	f.Intrinsic.Date.DateAdd("M", 1, v.Ambient.Date, v.Local.dTemp)
	'Exp dates filter
	f.Intrinsic.String.Build("END_DATE < '{0}'", v.Local.dTemp.PSQLFriendly, v.Local.sFilter)
	'Set Filter
	f.Data.DataView.Create("vendorCertDT", "vendorCertDV", 22, v.Local.sFilter, "")
	'Get Expired DT
	f.Data.DataView.ToDataTable("vendorCertDT", "vendorCertDV", "expiredDT", True)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.getExpiredCerts.End

Program.Sub.sendEmails.Start
v.Local.iCnt.Declare
v.Local.sBodyText.Declare

v.Local.sVendor.Declare
v.Local.sVendorName.Declare
v.Local.sCertification.Declare
v.Local.sDescription.Declare
v.Local.sArc_Liason.Declare
v.Local.sArc_Email.Declare
v.Local.sVend_Liason.Declare
v.Local.sVend_Phone.Declare
v.Local.sVend_Email.Declare
v.Local.dStart_Date.Declare
v.Local.dEnd_Date.Declare
v.Local.sOasisNo.Declare

v.Local.sSubject.Declare
v.Local.sSenderEmail.Declare
v.Local.sRecipients.Declare
v.Local.iUserID.Declare
f.Intrinsic.Control.Try
	'Get text from Email's Body file
	f.Intrinsic.File.File2String(v.Global.sFormatPath, v.Local.sBodyText)
	'Loop Through expired certifications and queue emails.
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.expiredDT.RowCount--, 1)
		'Get all Values to be used as wildcards.
		v.Local.sVendor.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Vendor!FieldValTrim)
		v.Local.sVendorName.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Vendor_Name!FieldValTrim)
		v.Local.sCertification.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Certification!FieldValTrim)
		v.Local.sDescription.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Description!FieldValTrim)
		v.Local.sArc_Liason.Set(v.DataTable.vendorCertDT(v.Local.iCnt).ARC_Liason!FieldValTrim)
		v.Local.sArc_Email.Set(v.DataTable.vendorCertDT(v.Local.iCnt).ARC_Email!FieldValTrim)
		v.Local.sVend_Liason.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Vend_Liason!FieldValTrim)
		v.Local.sVend_Phone.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Vend_Phone!FieldValTrim)
		v.Local.sVend_Email.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Vend_Email!FieldValTrim)
		v.Local.dStart_Date.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Start_Date!FieldValTrim)
		v.Local.dEnd_Date.Set(v.DataTable.vendorCertDT(v.Local.iCnt).End_Date!FieldValTrim)
		v.Local.sOasisNo.Set(v.DataTable.vendorCertDT(v.Local.iCnt).Oasis_No!FieldValTrim)
		
		'Wildcards:
		'@VENDOR@ : v.local.sVendor
		'@VENDOR_NAME@ : v.Local.sVendorName
		'@CERTIFICATION@ : v.Local.sCertification
		'@DESCRIPTION@ : v.Local.sDescription
		'@ARC_REP@ : v.Local.sArc_Liason
		'@ARC_EMAIL@ : v.Local.sArc_Email
		'@VEND_REP@ : v.Local.sVend_Liason
		'@VEND_PHONE@ : v.Local.sVend_Phone
		'@VEND_EMAIL@ : v.Local.sVend_Email
		'@START_DATE@ : v.Local.dStart_Date
		'@END_DATE@ : v.Local.dEnd_Date
		'@OASIS_NO@ : v.Local.sOasisNo

		'Replace Wildcards
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@VENDOR@", v.Local.sVendor, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@VENDOR_NAME@", v.Local.sVendorName, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@CERTIFICATION@", v.Local.sCertification, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@DESCRIPTION@", v.Local.sDescription, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@ARC_REP@", v.Local.sArc_Liason, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@ARC_EMAIL@", v.Local.sArc_Email, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@VEND_REP@", v.Local.sVend_Liason, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@VEND_PHONE@", v.Local.sVend_Phone, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@VEND_EMAIL@", v.Local.sVend_Email, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@START_DATE@", v.Local.dStart_Date.PervasiveDate, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@END_DATE@", v.Local.dEnd_Date.PervasiveDate, v.Local.sBodyText)
		f.Intrinsic.String.Replace(v.Local.sBodyText, "@OASIS_NO@", v.Local.sOasisNo, v.Local.sBodyText)
		
		'Set Subject.
		f.Intrinsic.String.Build("Certification: {0}. Expiration Notice", v.Local.sCertification, v.Local.sSubject)
		'Set Sender Email.
		f.Intrinsic.String.Build("{0}*!*{1}", v.Local.sArc_Email, v.Local.sArc_Liason, v.Local.sSenderEmail)
		'Set Recipients.
		'f.Intrinsic.String.Build("{0}*!*{1}@!@{2}*!*{3}", v.Local.sArc_Email, v.Local.sArc_Liason, v.Local.sVend_Email, v.Local.sVend_Liason, v.Local.sRecipients)
		f.Intrinsic.String.Build("{0}*!*{1}@!@{2}*!*{3}", v.Local.sArc_Liason, v.Local.sArc_Email, v.Local.sVend_Liason,v.Local.sVend_Email, v.Local.sRecipients)
		f.Global.Security.GetUserId(v.Caller.User, v.Caller.CompanyCode, v.Local.iUserID)
		'Queue Courier.
		f.Global.Messaging.QueueMessage(v.Caller.CompanyCode, v.Local.iUserID, "GCG_5731", v.Local.sSubject, v.Local.sSenderEmail, v.Local.sRecipients, v.Local.sBodyText)
	f.Intrinsic.Control.Next(v.Local.iCnt)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.sendEmails.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$aanazco$}$20200309164937652$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOzKfzv6dmZ7Y9+jCIAbP03uoZA26KIQ/feACfwXke8SHg=
Program.Sub.Comments.End